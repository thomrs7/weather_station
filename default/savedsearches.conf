[WX Stats Table]
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = wx_station
request.ui_dispatch_view = search
search = index = wx source=wx_station://* | table currentobservation.* location.* | rename currentobservation.* AS * location.* AS * | Rename longitude AS lon latitude AS lat |

[WX Stats]
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 * * * *
description = Update WX TSINDS with hourly data
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = mapping
enableSched = 1
request.ui_dispatch_app = wx_station
request.ui_dispatch_view = search
search = index = wx source=wx_station://* | table _time currentobservation.* location.* | rename currentobservation.* AS * location.* AS * | Rename longitude AS lon latitude AS lat |  tscollect namespace=wx

[Temperature Conversions]
description = Temperature  in various scales ; New search commands do the work.
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","currentobservation.Temp"]
display.events.type = table
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = wx_station
request.ui_dispatch_view = search
search = | tstats mean(Temp) as Temp mean(Relh) as Relh mean(Winds) as Winds FROM wx  by  areaDescription | eval Temp = round(Temp,2) | eval Relh = round(Relh,2) |eval Winds = round(Winds,2) |  rename areaDescription as location | chirps | heatindex | windchill | celsius | kelvin | reaumur | rankine | table location Temp Relh Winds chirps heatIndex old_wind_chill new_wind_chill celsius kelvin reaumur rankine

[Forecast]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = wx_station
request.ui_dispatch_view = search
search = index = wx source=wx_station://* location.areaDescription="Saint Petersburg FL" | head 1 | rename data.*{} as *, time.startPeriodName{} as time | eval d = mvzip(temperature,text,"|") | eval d = mvzip(d,pop,"|")| eval d = mvzip(d,weather,"|")| eval d = mvzip(d,iconLink,"|") | eval d = mvzip(d,time,"|") | table d | mvexpand d | eval d=split(d, "|") | eval time =  mvindex(d,5) | eval temp =  mvindex(d,0)| eval pop =  mvindex(d,2) | eval weather =  mvindex(d,3)| eval icon =  mvindex(d,4) | eval text =  mvindex(d,1) | table time temp, pop, text weather icon

[Pressure Conversions]
description = Pressure  in various scales ; New search commands do the work.
display.events.fields = ["host","source","sourcetype","currentobservation.Temp"]
display.events.type = table
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = wx_station
request.ui_dispatch_view = search
search = | tstats mean(SLP) as SLP FROM wx  by  areaDescription | rename areaDescription as Location | eval Pressure = round(Pressure,2) | pmmhg | psi | kilopascals | table  Location SLP Pressure_mmHg psi kilopascals

[Wind Speed Conversions]
description = Wind data  in various scales ; New search commands do the work.
display.events.fields = ["host","source","sourcetype","currentobservation.Temp"]
display.events.type = table
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = wx_station
request.ui_dispatch_view = search
search = | tstats mean(Winds) as Winds  first(Windd) as Windd FROM wx  by  areaDescription | rename areaDescription as location | eval Winds = round(Winds,2) | knots | windfps | windmps | windkph | winddir | table location Winds knots windfps windmps windkph Windd Wind_dir | rename windfps as Wind_Ft_Sec windmps AS Wind_Meters_Sec windkph AS Wind_kilometers_hr Winds as Wind_mph knots as Knots
